class RockPaperScissors

  # Exceptions this class can raise:
  class NoSuchStrategyError < StandardError ; end



  def self.winner(player1, player2)

    arr = %w[P R S]
    raise RockPaperScissors::NoSuchStrategyError,"Strategy must be one of R,P,S" unless arr.member? player1.last
    raise RockPaperScissors::NoSuchStrategyError,"Strategy must be one of R,P,S" unless arr.member? player2.last

    return player1 if((player1[1] == 'P')&&(player2[1] == 'R'))
    return player1 if((player1[1] == 'R')&&(player2[1] == 'S'))
    return player1 if((player1[1] == 'S')&&(player2[1] == 'P'))
    return player1 if(player1[1] == player2[1])
    return player2

  end

  def self.tournament_winner(tournament)
    return tournament if tournament[0].is_a? String
    return winner(tournament_winner(tournament[0]), tournament_winner(tournament[1]))
  end
end
